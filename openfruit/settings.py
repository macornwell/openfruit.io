"""
Django settings for openfruit project.

Generated by 'django-admin startproject' using Django 1.8.12.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import os
from django.contrib import messages

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u#@o=t712pxpr*tgsx+cx7u!wj2l#4j-1!+t+v5e%g#(+y+7v!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DJANGO_DEBUG', ''))

ALLOWED_HOSTS = ['*',]
LOCAL_HOST = os.environ.get('LOCAL_HOST')
if LOCAL_HOST:
        ALLOWED_HOSTS.append(LOCAL_HOST)



# Application definition

INSTALLED_APPS = (
    'django_admin_bootstrapped',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'bootstrap3',
    'datetimewidget',
    'auditlog',
    'crispy_forms',
    'openfruit',
    'openfruit.common',
    'openfruit.geography',
    'openfruit.taxonomy',
    'openfruit.reports.bloom',
    'openfruit.reports.characteristics',
    'openfruit.reports.review',
    'openfruit.reports.ripening',
    'openfruit.fruit_profile',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
)

ROOT_URLCONF = 'openfruit.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
            ],
        },
    },
]

WSGI_APPLICATION = 'openfruit.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}




# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True


############
# LOGGGING #
############


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)s [%(process)d] [%(levelname)s] ' +
                       'pathname=%(pathname)s lineno=%(lineno)s ' +
                       'funcname=%(funcName)s %(message)s'),
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        }
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'testlogger': {
            'handlers': ['console'],
            'level': 'INFO',
        }
    }
}

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = '/media/'

LOGIN_URL = '/api-auth/login/'
LOGIN_REDIRECT_URL = '/'

###########
#  Django Admin Bootstrap Settings

MESSAGE_TAGS = {
            messages.SUCCESS: 'alert-success success',
            messages.WARNING: 'alert-warning warning',
            messages.ERROR: 'alert-danger error'
}

DAB_FIELD_RENDERER = 'django_admin_bootstrapped.renderers.BootstrapFieldRenderer'



##########
# Group & User Model Permissions
##########
def get_user_models_for_permissions():
    from openfruit.reports.bloom.models import BloomReport
    from openfruit.reports.characteristics.models import FruitCharacteristicReport
    from openfruit.reports.review.models import FruitReviewReport
    from openfruit.reports.ripening.models import FruitRipeningReport
    from openfruit.taxonomy.models import Cultivar, Species
    from openfruit.geography.models import City, GeoCoordinate, GeolocatedZipcode, Location

    return (
        BloomReport, FruitCharacteristicReport,
        FruitRipeningReport, FruitRipeningReport,
        FruitReviewReport, Cultivar, Species, City, GeoCoordinate, GeolocatedZipcode, Location
    )

def get_curator_models():
    from openfruit.reports.bloom.models import BloomReport
    from openfruit.reports.characteristics.models import FruitCharacteristicReport
    from openfruit.reports.review.models import FruitReviewReport
    from openfruit.reports.ripening.models import FruitRipeningReport
    from openfruit.taxonomy.models import Cultivar, Kingdom, Species, Genus
    from openfruit.geography.models import City, Continent, Country, GeoCoordinate, GeolocatedZipcode, Location, State

    return (
        BloomReport, FruitCharacteristicReport,
        FruitRipeningReport, FruitRipeningReport,
        FruitReviewReport, Cultivar, Kingdom,
        Species, Genus, City, Continent, Country,
        GeoCoordinate, GeolocatedZipcode, Location, State
    )

CRISPY_TEMPLATE_PACK = 'bootstrap3'
