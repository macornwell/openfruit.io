// Generated by CoffeeScript 1.10.0
(function() {
  var EventService, ref, ref1, ref2, root,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.openfruit = (ref = root.openfruit) != null ? ref : {};

  root.openfruit.reports = (ref1 = root.openfruit.reports) != null ? ref1 : {};

  root.openfruit.reports.event = (ref2 = root.openfruit.reports.event) != null ? ref2 : {};

  EventService = (function() {
    var __addEventURL, __getEventsUrl;

    __getEventsUrl = 'api/v1/reports/event/';

    __addEventURL = 'api/v1/reports/event/add/';

    function EventService(easyData) {
      this.getEvents = bind(this.getEvents, this);
      this.createEventRecord = bind(this.createEventRecord, this);
      this._easyData = easyData;
    }

    EventService.prototype.createEventRecord = function(recordType, fruitingPlantID, successCallback, errorCallback) {
      var data;
      data = {
        'event_type': recordType,
        'fruiting_plant_id': fruitingPlantID
      };
      return this._easyData.post(__addEventURL, data, successCallback, errorCallback);
    };

    EventService.prototype.getEvents = function(successCallback, errorCallback, fruitingPlantID, submittedBy, eventType, types) {
      var data;
      if (fruitingPlantID == null) {
        fruitingPlantID = null;
      }
      if (submittedBy == null) {
        submittedBy = null;
      }
      if (eventType == null) {
        eventType = null;
      }
      if (types == null) {
        types = [];
      }
      data = {
        'fruiting_plant_id': fruitingPlantID,
        'submitted_by': submittedBy,
        'event_type': eventType,
        'types': types
      };
      return this._easyData.getManyResultsWithData(__getEventsUrl, data, successCallback);
    };

    return EventService;

  })();

  root.openfruit.reports.event.EventService = EventService;

}).call(this);

//# sourceMappingURL=event-service.js.map
